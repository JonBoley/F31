% Play vowelssrate = 22100.;again = 'n'while again~='q'	fcount = 0; bcount = -1;		while fcount~=bcount		text = input('Enter formants (F1 F2 .., ²6) in Hz: ','s');		[forms, fcount] = sscanf(text, '%g %g %g %g %g %g', inf);% To save time, compute bandwidths from formants		bws = max([40*ones(length(forms),1), forms/10]')';		bcount = length(bws);		%		text = input('Enter same number of bandwidths (BW1 BW2 ..) in Hz: ', 's');%		[bws, bcount] = sscanf(text, '%g %g %g %g %g %g', inf);		%		if(fcount~=bcount)%			fprintf('*** Number of formants must equal number of BWs.***\n')%	    end	end		pitch = input('Voice pitch (Hz): ');		% Compute vowel, subtract off DC component	[tims, vows] = dovowl(forms, bws, pitch, 0.4, srate);	vows = vows - mean(vows);		% Plot vowel waveform over 3 cycles	npt = round(3*srate/pitch);	subplot(2,1,1)	plot(tims(1:npt), vows(1:npt))		% Plot magnitude spectrum over first 5 kHz	spect = 20*log10(abs(fft(vows))); freqs = [0:srate/length(vows):srate];	subplot(2,1,2)	npf = round(length(spect)*5000/srate); 	semilogx(freqs(1:npf), spect(1:npf))	dbmax = max(spect);	axis([0.9*pitch 5000 dbmax-40 dbmax])		again = 'a';	window = ones(length(vows),1); none = srate/pitch; ramp = [0:1/none:1]';	window(1:length(ramp)) = ramp;	window(length(window)-length(ramp)+1:length(window)) = flipud(ramp);	vowind = vows.*window;	while again=='a'	    soundsc(vowind, srate)		again = input('Quit, More, Again: ','s');	endend